---

# 微服务部署
# 备份
- name: mkdir weather-api backup dir
  become: yes
  become_user: root
  file:
    path: "{{ wm_project_path }}/backup"
    state: directory
    owner: waming
    group: waming
    mode: 0755
  when: 'wm_project != "weather-web.war"'

- name: rm weather-api backup dir
  become: yes
  become_user: root
  file:
    path: "{{ wm_project_path }}/backup/"
    state: absent

#- name: rm backup {{ wm_project }}
#  remote_user: waming
#  become: yes
#  become_user: root
#  shell: "rm -rf {{ wm_project_path }}/backup/*"
#  when: 'wm_project != "weather-web.war"'

- name: backup {{ wm_project }}
  remote_user: waming
  become: yes
  become_user: root
  command: "cp -a {{ wm_project_path }}/{{ wm_project }} {{ wm_project_path }}/backup"
  when: 'wm_project != "weather-web.war"'

# 删除老的lib
- name: delete {{ wm_project }}
  become: yes
  become_user: root
  file:
    dest: "{{ wm_project_path }}/{{ wm_project }}/lib"
    state: absent
  when: 'wm_project != "weather-web.war"'

# 解压到远端服务器
- name: Unarchive {{ wm_project }}
  unarchive:
    src: "{{ wm_package_path }}/{{ wm_package }}"
    dest: "{{ wm_project_path }}"
  when: 'wm_project != "weather-web.war"'

# 重启服务
- name: restart {{ wm_project }}
  shell: /bin/bash start.sh
  args:
    chdir: "{{ wm_project_path }}/{{ wm_project }}/bin/"
  async: 30
  poll: 1
  when: 'wm_project != "weather-web.war" and wm_project != "weather-python"'

# weather-python root启动
- name: restart root {{ wm_project }}
  become: yes
  become_user: root
  shell: /bin/bash start.sh
  args:
    chdir: "{{ wm_project_path }}/{{ wm_project }}/bin/"
  async: 30
  poll: 1
  when: 'wm_project == "weather-python"'

# web部署
- name: web backup {{ wm_project }}
  remote_user: waming
  become: yes
  become_user: root
  command: "cp -a {{ wm_project_path }}/{{ wm_project }} /app/yubin/"
  when: 'wm_project == "weather-web.war"'

- name: web backup time
  remote_user: waming
  become: yes
  become_user: root
  shell: "cp -a /app/yubin/{{ wm_project }} /app/yubin/{{ wm_project }}{{ backup_time }}"
  when: 'wm_project == "weather-web.war"'

- name: web copy {{ wm_project }}
  remote_user: waming
  become: yes
  become_user: root
  copy:
    src: "{{ wm_package_path }}/{{ wm_package }}"
    dest: "{{ wm_project_path }}"
    force: yes
  when: 'wm_project == "weather-web.war"'

# 检查端口
- name: check {{ wm_project }} port is opened
  wait_for:
    host: "{{ groups['wm'][0] }}"
    port: "{{ wm_project_port }}"
    timeout: 30
  # ignore_errors: True
  when: 'wm_project != "weather-python"'
