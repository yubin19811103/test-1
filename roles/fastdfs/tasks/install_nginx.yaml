---

- name: check the nginx_tracker port is opened
  wait_for:
    host: "{{ item }}"
    port: "{{ nginx_tracker_port }}"
    timeout: 5
  ignore_errors: True
  run_once: true
  register: nginx_tracker_running
  with_items:
    - "{{ tracker_server }}"
  when: 'role=="all" or role=="tracker"'

- name: check the nginx_storage port is opened
  wait_for:
    host: "{{ item }}"
    port: "{{ nginx_storage_port }}"
    timeout: 5
  ignore_errors: True
  run_once: true
  register: nginx_storage_running
  with_items:
      - "{{ storage_server }}"
  when: 'role=="all" or role=="storage"'

- name: useradd nginx
  become: yes
  become_user: root
  user:
    name: nginx
    shell: /sbin/nologin

- name: configure nginx
  become: yes
  become_user: root
  command: "./configure --prefix={{ nginx_path }} --add-module=/tmp/fastdfs-nginx-module-master/src" 
  args:
    chdir: /tmp/nginx-master/
  when: 'nginx_tracker_running | failed or nginx_storage_running | failed'

- name: make nginx
  become: yes
  become_user: root
  shell: make && make install
  args:
    chdir: /tmp/nginx-master/
  when: 'nginx_tracker_running | failed or nginx_storage_running | failed'

- name: create nginx_tracker config file
  become: yes
  become_user: root
  template:
    src: nginx_tracker.conf.j2
    dest: "{{ nginx_path }}/conf/nginx_tracker.conf"
    backup: yes

- name: create nginx_storage config file
  become: yes
  become_user: root
  template:
    src: nginx_storage.conf.j2 
    dest: "{{ nginx_path }}/conf/nginx_storage.conf"
    backup: yes

- name: create mime.types config file
  become: yes
  become_user: root
  template:
    src: mime.types.j2
    dest: "/etc/fdfs/mime.types"
    backup: yes

- name: create http.conf config file
  become: yes
  become_user: root
  template:
    src: http.conf.j2
    dest: "/etc/fdfs/http.conf"
    backup: yes

- name: create mod_fastdfs.conf config file
  become: yes
  become_user: root
  template:
    src: mod_fastdfs.conf.j2
    dest: "/etc/fdfs/mod_fastdfs.conf"
    backup: yes

- name: created link
  become: yes
  become_user: root
  file:
    src:  "{{ storage_path }}/data"
    dest:  "{{ storage_path }}/data/M00"
    state: link

- name: stop nginx
  become: yes
  become_user: root
  command: killall nginx
  ignore_errors: True

- name: start nginx_tracker
  become: yes
  become_user: root
  command: "{{ nginx_path }}/sbin/nginx -c {{ nginx_path }}/conf/nginx_tracker.conf"
  when: 'role=="all" or role=="tracker"'

- name: start nginx_storage
  become: yes
  become_user: root
  command: "{{ nginx_path }}/sbin/nginx -c {{ nginx_path }}/conf/nginx_storage.conf"
  when: 'role=="all" or role=="storage"'
